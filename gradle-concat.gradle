class ConcatFiles extends DefaultTask {
    @InputFiles
    FileCollection files
    @OutputFile
    File target
    @TaskAction
    void concat() {
        target.withWriter { writer ->
            files.each { file ->
                file.withReader { reader ->
                    writer << reader << '\n'
                }
            }
        }
    }
}

class ConcatWithFilter extends DefaultTask {
    @InputFiles
    FileCollection files
    @OutputFile
    File target
    @TaskAction
    void concat() {
        target.withPrintWriter { writer ->
            files.each { file ->
                file.eachLine { line ->
                    if (!line.startsWith('@import')) {
                        writer.println(line)
                    }
                }
            }
        }
    }
}

//    task concat(type: SourceTask) {
//        source 'src/main/resources/static/css/dev'
//        include '**/*.css'
//        outputs.file new File(buildDir, "min/css/all.css")
//
//        doLast {
//            ant.concat(destfile: outputs.files.singleFile) {
//                source.addToAntBuilder(ant, 'fileset', FileCollection.AntType.FileSet)
//            }
//        }
//    }

def cssDir = project.file("src/main/resources/static/css/dev")
def outDir = project.file("$buildDir/concat")


task concatCSS(type: ConcatWithFilter) {
    files = files(
            project.file("$cssDir/main.css"),
            project.file("$cssDir/generic-normalize.css"),
            project.file("$cssDir/style.css"),
            project.file("$cssDir/responsive.css"),
            project.file("$cssDir/quiz.css"),
            project.file("$cssDir/development.css")
    )
    target = file("$outDir/css/style.css")
}