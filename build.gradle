buildscript {
	dependencies {
		classpath "org.gradle-webtools.minify:gradle-minify-plugin:${minifyPluginVersion}"
	}
}

plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.gradlewebtools.minify" version "${minifyPluginVersion}"
}

/**
 *  build War for Tomcat:
 *  1.) uncomment 'spring-boot-starter-tomcat'
 *  2.) uncomment war configs
 */
apply plugin:'war'
bootWar {
	enabled = true
	archiveName 'ROOT.war'
}

group = 'bg'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
//targetCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
//	implementation 'com.google.code.gson:gson:2.8.6' -> Jackson
	// Swagger
	implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
	implementation 'com.cloudinary:cloudinary:1.0.14'
	implementation 'org.modelmapper:modelmapper:2.3.9'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat' // remove for Docker
	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'com.h2database:h2'
}

test {
//	useJUnitPlatform()
}


/**
 * 	Custom tasks ...................................................................
 *
 * 	Create static JS client and sync it to tomcat:
 * 	...
 * 		01. Run Git Bash or Terminal in build.gradle directory
 * 		02. _$ gradle client
 **/
apply from: 'build-client.gradle'

task CssMinify(type: org.gradlewebtools.minify.CssMinifyTask) {
	srcDir = project.file("$buildDir/concat/css")
	dstDir = project.file("$buildDir/min/css")
}

task JsMinify(type: org.gradlewebtools.minify.JsMinifyTask) {
	srcDir = project.file("$buildDir/concat/js")
	dstDir = project.file("$buildDir/min/js")
	finalizedBy('concatJS_finalize')
}

client {
	dependsOn('cclean')
	dependsOn('concatCSS')
	dependsOn('concatJS')

	concatCSS.shouldRunAfter('cclean')
	concatJS.shouldRunAfter('concatCSS')
	shouldRunAfter('concatJS')
}